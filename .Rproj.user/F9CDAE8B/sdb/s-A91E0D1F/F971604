{
    "collab_server" : "",
    "contents" : "\n\n# Function to calculate impact\n#' Calculate the impact of a reduction in PM concentration\n#'\n#' @param population A vector of the population in single-year age groups\n#' @param deaths A vector of the total number of deaths in the population\n#' @param pm_concentration The population-weighted PM2.5 concentration in each future year\n#' @param lag_structure The structure of any cessation lag\n#' @param RR The relative risk (or hazard ratio) to use from the assessment. This is taken\n#' from epidemiological studies\n#' @param unit The unit change in PM2.5 concentration for the RR\n#' @param max_age The maximum age to use for the assessment\n#' @param base_year The base year for the assessment\n#'\n#' @return A list of four matrices (with dimensions of age and calendar year) of:\n#' \\itemize{\n#' \\item{The difference in number of deaths over 120 years (extended population)}\n#' \\item{The difference in number of deaths over 120 years (current cohort)}\n#' \\item{The difference in number of life years over 120 years (extended population)}\n#' \\item{The difference in number of life years over 120 years (current cohort)}}\n#' @export\n#'\n#' @examples\n#'\n#' Reduce PM from 15 to 14 mcg/m3\n#' pm <- c(15, 14)\n#' epa_lag <- cumsum(c(0.3, rep(0.125, 4), rep(0.2/15, 15)))\n#'\n#' impact(pop, deaths)\nimpact  <- function(population, deaths,\n                    pm_concentration = c(20, 19),\n                    lag_structure = 1,\n                    RR = 1.06, unit = 10,\n                    max_age = 105, base_year = 2013){\n\n  # First estimate the impact factor\n  IF <- impact_factor(pm_conc = pm_concentration, lag_structure = lag_structure,\n                      RR = RR, unit = unit)\n\n  # Functions -----------------------------------------\n  # Calculate the survival propbability from age 0 - 105.\n  survival_probability <- function(IF) {\n    # Extend the hazard by repeating hazard in the final age group to length 106\n    qx <- c(qx, rep(qx[length(qx)], max_age + 1 - length(qx)))\n    # Mulitply ages 30+ by the impact factor\n    qx[31:length(qx)] <- qx[31:length(qx)] * IF\n    # Calculate the surival probability in the IOMLIFET way\n    sx <- (2 - qx) / (2 + qx)\n    sx[length(sx)] <- 0\n    sx\n  }\n\n  # Make a Leslie matrix to transform the current population\n  survival_diag <- function(IF){\n    # Calculate the survival probability\n    sx <- survival_probability(IF)\n    # Make the diagonal\n    sx_diag <- diag(head(sx, - 1))\n    # Make a vector that goes 1, 0, 0 ... and make it the first row\n    r1 <- rep(c(1,0), c(1, max_age - 1))\n    sx_diag <- cbind(rbind(r1, sx_diag), rep(0, max_age + 1))\n    sx_diag\n  }\n\n  # Make a matrix of future population by age and calendar year\n  population_matrix <- function(IFs) {\n    # Make a list of Leslie matrices\n    sx_diags <- lapply(IFs, survival_diag)\n    # Empty matrix to which the transformed popualtion data will be added\n    pop_mat <- matrix(0, ncol = length(sx_diags) + 1, nrow = nrow(sx_diags[[1]]))\n    # Baseline populaiton (0 in age-groups older than we have data for)\n    nx <- c(population, rep(0, nrow(sx_diags[[1]]) - length(population)))\n    pop_mat[, 1] <- nx\n    for(i in seq_along(sx_diags)){\n      pop_mat[, i + 1] <- sx_diags[[i]] %*% pop_mat[, i]\n    }\n    pop_mat <- pop_mat[, -ncol(pop_mat)]\n    colnames(pop_mat) <- base_year:(base_year + 119)\n    rownames(pop_mat) <- 0:max_age\n    pop_mat\n  }\n\n  # Calculate results --------------------------------------------------\n\n  # Make matrices of the surival probability of the baseline and impacted\n  # populations\n  qx <- deaths/population\n  sx_mat <- sapply(rep(1, length(IF)), FUN = survival_probability)\n  sx_mat_i <- sapply(IF, FUN = survival_probability)\n\n  # Make matricies of the baseline and impacted populations\n  baseline_pop <- population_matrix(rep(1, length(IF)))\n  impacted_pop <- population_matrix(IF)\n\n  # Calculate number of deaths\n  baseline_deaths <- baseline_pop * (1 - sx_mat)\n  impacted_deaths <- impacted_pop * (1 - sx_mat_i)\n  diff_deaths <- baseline_deaths - impacted_deaths\n\n  # Calculate number of deaths among current cohort\n  diff_deaths_current <- diff_deaths\n  diff_deaths_current[upper.tri(diff_deaths_current)] <- 0\n\n  # Calculate number of life years (population x half the number of deaths in a\n  # given year)\n  baseline_ly <- baseline_pop - 0.5 * baseline_deaths\n  impacted_ly <- impacted_pop - 0.5 * impacted_deaths\n  diff_ly <- impacted_ly - baseline_ly\n\n  # And life years among the current cohort\n  diff_ly_current <- diff_ly\n  diff_ly_current[upper.tri(diff_ly_current)] <- 0\n\n  results <- list(\"Difference in deaths\" = diff_deaths,\n                  \"Difference in deaths among current cohort\" = diff_deaths_current,\n                  \"Difference in life years\" = diff_ly,\n                  \"Difference in life years among current cohort\" = diff_ly_current)\n}\n",
    "created" : 1478754528027.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "1553326599",
    "id" : "F971604",
    "lastKnownWriteTime" : 1480370933,
    "last_content_update" : 1480370933776,
    "path" : "~/projects/iomlifetR/R/impact_function.R",
    "project_path" : "R/impact_function.R",
    "properties" : {
        "source_window_id" : "",
        "tempName" : "Untitled3"
    },
    "relative_order" : 6,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}