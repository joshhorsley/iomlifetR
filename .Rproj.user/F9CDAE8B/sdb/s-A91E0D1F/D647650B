{
    "collab_server" : "",
    "contents" : "#' Calculate life expectancy\n#'\n#' @descripiton Calculate life expectancy using the Chiang method\n#' @param start_age A numeric vector. The first age (in years) in each age group.\n#' @param hazard A numeric vector. The age specific hazard.\n#' @param neonatal_deaths Logical. Are neonatal deaths included?\n#' @return A data frame of: \\itemize{\n#' \\item{Age groups}\n#' \\item{Age-specific hazards}\n#' \\item{Population surviving from a cohort of 100,000}\n#' \\item{Survival probability}\n#' \\item{Number of deaths per 100,000}\n#' \\item{Number of life-years lived per 100,0000}\n#' \\item{life expectancy}}\n#' @export\n#'\n#' @examples\n#'\n#' Example using data from the Oaffice of National Statistics:\n#'  \n#' ons_data <- read.csv(\"ons_data.csv\")\n#' start_age <- c(0, 1, seq(5, 85, 5))\n#' hazard <- ons_data$deaths / ons_data$pop\n#' life_expectancy(start_age, hazard)\n#'\nlife_expectancy <- function(start_age, hazard, neonatal_deaths = TRUE){\n\n  if (length(start_age) != length(hazard))\n  {warning(\"The number of age groups is not equal to the number of hazards\")}\n\n  # n: time within each age group\n  n <- c(diff(start_age), 0)\n  # ax: adjustment for timing of death within each age-group\n  if(neonatal_deaths){\n    ax <- c(0.1, rep(0.5, length(n) - 1))\n  } else {\n    ax <- rep(0.5, length(n))\n  }\n  # qx: mortality rate\n  qx <- n * hazard / (1 + n * (1 - ax) * hazard)\n  qx[length(qx)] <- 1\n  # Sx: survival probability\n  Sx <- 1 - qx\n  # Ix: Number remaining in a cohort of 100,000\n  Ix <- c(100000, 100000 * cumprod(Sx[-length(Sx)]))\n  Ix_lag <- c(Ix[2:length(Ix)], 0)\n  # dx: number of deaths in each age group of the cohort\n  dx <- Ix - Ix_lag\n  # Lx: life years lived by member so the age group\n  Lx <- n * (Ix_lag + (ax * dx))\n  Lx[length(Lx)] <- Ix[length(Ix)] / hazard[length(hazard)]\n  # Tx: Cumulative number of life years to be lived\n  Tx <- rev(cumsum(rev(Lx)))\n  # ex: Life expectancy\n  ex <- Tx/ Ix\n\n  age <- ifelse(n <= 1,\n                start_age,\n                paste(start_age, \"-\", start_age + n - 1))\n  age[length(age)] <- paste0(age[length(age)], \"+\")\n\n  lt <- data.frame(age, hazard, Ix, Sx, dx, Lx, ex)\n  lt\n}\n\n\n#' An implementation of the IOM life expectancy spreadsheets\n#'\n#' @description Calculate the change in life expectancy associated with a reduction in risk of death\n#' @param start_age A numeric vector. The starting age of each age group\n#' @param population A numeric vector. The age-specific population size.\n#' @param deaths A numeric vector. The age-specific number of deaths.\n#' @param ages_at_risk Numeric vector. The age groups exposed to risk.\n#' @param pm_concentration A number. The population weighted-mean PM2.5 concentration of interest.\n#' @param RR A number. Specifies the relative risk from an epidemiologiccal study.\n#' @param neonatal_deaths Logical. Are neonatal deaths included?\n#' @param unit A number. Speficies the unit change associated with the relative risk (RR).\n#' @return A numeric vector of length 120 specifying the impact factor over the next 120 years.\n#'\n#' @return A list of interesting outputs from the burden calculations\n#' @export\n#'\n#' @examples\n#' iom_data <- read.csv(\"iom_data.csv\")\n#'\n#' lts <- le_change(start_age = 0:(nrow(iom_data)-1), iom_data$population, iom_data$deaths)\n#' # Difference in LE at birth\n#' lts$difference$ex[1]\nle_change <- function(start_age, population, deaths, ages_at_risk = 30:90,\n                      pm_concentration = 1, RR = 1.06, unit = 10,\n                      neonatal_deaths = TRUE){\n  # Caclulate additional risk associated with.\n  beta   <- log(RR) / unit\n  rr     <- exp(-beta * pm_concentration)\n\n  # Align rr with ages at risk. If age is not at risk, rr = 1.\n  impact <- ifelse(start_age %in% ages_at_risk, rr, 1)\n\n  baseline_hazard <- deaths / population\n  impacted_hazard <- baseline_hazard * impact\n\n  # Produce life tables for the baseline and reduced exposure scenarios\n  baseline_lt <- life_expectancy(start_age, baseline_hazard, neonatal_deaths)\n  impacted_lt <- life_expectancy(start_age, impacted_hazard, neonatal_deaths)\n\n  differences <- data.frame(\n    age <- baseline_lt$age,\n    ex_diff = 365 * (impacted_lt$ex - baseline_lt$ex),\n    ly_diff = impacted_lt$Lx - baseline_lt$Lx,\n    dx_diff = baseline_lt$dx - impacted_lt$dx\n  )\n  results <- list(\n    difference = differences,\n    baseline = baseline_lt,\n    impacted = impacted_lt\n  )\n  return(results)\n}\n\n#' The attributable number\n#'\n#' @param start_age A numeric vector. The starting age of each age group\n#' @param population A numeric vector. The age-specific population size.\n#' @param deaths A numeric vector. The age-specific number of deaths.\n#' @param ages_at_risk A numeric vector. The age groups exposed to risk.\n#' @param pm_concentration A number. The population weighted-mean PM2.5 concentration of interest.\n#' @param RR A number. Specifies the relative risk from an epidemiologiccal study.\n#' @param unit A number. Speficies the unit change associated with the relative risk (RR).\n#'\n#' @return A numeric vector of age-specific attributable numbers.\n#' @export\n#'\n#' @examples\n#' \nattributable_number <- function(start_age = 0:90, population, deaths, ages_at_risk = 30:90,\n                                pm_concentration = 1, RR = 1.06, unit = 10){\n  beta   <- log(RR) / unit\n  rr     <- exp(-beta * pm_concentration)\n  \n  # Align rr with ages at risk. If age is not at risk, rr = 1.\n  impact <- ifelse(start_age %in% ages_at_risk, rr, 1)\n  \n  hazard <- deaths/population\n  an <- hazard * (1 - impact) * population\n  \n}\n",
    "created" : 1478040408987.000,
    "dirty" : true,
    "encoding" : "UTF-8",
    "folds" : "25|71|63|0|\n",
    "hash" : "883440143",
    "id" : "D647650B",
    "lastKnownWriteTime" : 1480468480,
    "last_content_update" : 1480475588832,
    "path" : "~/projects/iomlifetR/R/life_tables.R",
    "project_path" : "R/life_tables.R",
    "properties" : {
        "source_window_id" : "",
        "tempName" : "Untitled1"
    },
    "relative_order" : 2,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}