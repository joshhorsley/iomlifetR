rownames(pop_mat) <- 0:max_age
pop_mat
}
# Calculate results --------------------------------------------------
# Make matrices of the surival probability of the baseline and impacted
# populations
qx <- deaths/population
sx_mat <- sapply(rep(1, nrow(IF)), FUN = survival_probability)
sx_mat_i <- sapply(IF$IF, FUN = survival_probability)
# Make matricies of the baseline and impacted populations
baseline_pop <- population_matrix(rep(1, nrow(IF)))
impacted_pop <- population_matrix(IF$IF)
# Calculate number of deaths
baseline_deaths <- baseline_pop * (1 - sx_mat)
impacted_deaths <- impacted_pop * (1 - sx_mat_i)
diff_deaths <- baseline_deaths - impacted_deaths
# Calculate number of deaths among current cohort
diff_deaths_current <- diff_deaths
diff_deaths_current[upper.tri(diff_deaths_current)] <- 0
# Calculate number of life years
baseline_ly <- baseline_pop - 0.5 * baseline_deaths
impacted_ly <- impacted_pop - 0.5 * impacted_deaths
diff_ly <- impacted_ly - baseline_ly
diff_ly_current <- diff_ly
diff_ly_current[upper.tri(diff_ly_current)] <- 0
results <- list("Total difference in deaths per year" = colSums(diff_deaths),
"Total difference in deaths per year (current cohort)" = colSums(diff_deaths_current),
"Total difference in life years (by year)" = colSums(diff_ly),
"Difference in deaths (matrix)" = diff_deaths,
"Difference in deaths among current cohort (matrix)" = diff_deaths_current,
"Difference in life years (matrix)" = diff_ly)
}
x <- impact(max_age = 106, deaths = deaths, population = population)
impact  <- function(population, deaths,
pm_concentration = c(20, 19),
lag_structure = cumsum(c(0.3, rep(0.125, 4), rep(0.2/15, 15))),
RR = 1.06, unit = 10,
max_age = 105, base_year = 2016){
# First estimate the impact factor
IF <- impact_factor(base_year = base_year,
pm = pm_concentration, lag_structure = lag_structure,
RR = RR, unit = unit)
# Functions -----------------------------------------
# Calculate the survival propbability from age 0 - 105.
survival_probability <- function(IF) {
# Extend the hazard by repeating hazard in the final age group to length 106
qx <- c(qx, rep(qx[length(qx)], max_age + 1 - length(qx)))
# Mulitply ages 30+ by the impact factor
qx[31:length(qx)] <- qx[31:length(qx)] * IF
# Calculate the surival probability in the IOMLIFET way
sx <- (2 - qx) / (2 + qx)
sx[length(sx)] <- 0
sx
}
# Make a Leslie matrix to transform the current population
survival_diag <- function(IF){
# Calculate the survival probability
sx <- survival_probability(IF)
# Make the diagonal
sx_diag <- diag(head(sx, - 1))
# Make a vector that goes 1, 0, 0 ... and make it the first row
r1 <- rep(c(1,0), c(1, max_age - 1))
sx_diag <- cbind(rbind(r1, sx_diag), rep(0, max_age + 1))
sx_diag
}
# Make a matrix of future population by age and calendar year
population_matrix <- function(IFs) {
# Make a list of Leslie matrices survival probability
sx_diags <- lapply(IFs, survival_diag)
nx <- c(population, rep(0, nrow(sx_diags[[1]]) - length(population)))
pop_mat <- matrix(0, ncol = length(sx_diags) + 1, nrow = nrow(sx_diags[[1]]))
pop_mat[, 1] <- nx
for(i in seq_along(sx_diags)){
pop_mat[, i + 1] <- sx_diags[[i]] %*% pop_mat[, i]
}
pop_mat <- pop_mat[, -ncol(pop_mat)]
colnames(pop_mat) <- base_year:(end_year -1)
rownames(pop_mat) <- 0:max_age
pop_mat
}
# Calculate results --------------------------------------------------
# Make matrices of the surival probability of the baseline and impacted
# populations
qx <- deaths/population
sx_mat <- sapply(rep(1, nrow(IF)), FUN = survival_probability)
sx_mat_i <- sapply(IF$IF, FUN = survival_probability)
# Make matricies of the baseline and impacted populations
baseline_pop <- population_matrix(rep(1, length(IF)))
impacted_pop <- population_matrix(IF)
# Calculate number of deaths
baseline_deaths <- baseline_pop * (1 - sx_mat)
impacted_deaths <- impacted_pop * (1 - sx_mat_i)
diff_deaths <- baseline_deaths - impacted_deaths
# Calculate number of deaths among current cohort
diff_deaths_current <- diff_deaths
diff_deaths_current[upper.tri(diff_deaths_current)] <- 0
# Calculate number of life years
baseline_ly <- baseline_pop - 0.5 * baseline_deaths
impacted_ly <- impacted_pop - 0.5 * impacted_deaths
diff_ly <- impacted_ly - baseline_ly
diff_ly_current <- diff_ly
diff_ly_current[upper.tri(diff_ly_current)] <- 0
results <- list("Total difference in deaths per year" = colSums(diff_deaths),
"Total difference in deaths per year (current cohort)" = colSums(diff_deaths_current),
"Total difference in life years (by year)" = colSums(diff_ly),
"Difference in deaths (matrix)" = diff_deaths,
"Difference in deaths among current cohort (matrix)" = diff_deaths_current,
"Difference in life years (matrix)" = diff_ly)
}
x <- impact(max_age = 106, deaths = deaths, population = population)
IF <- impact_factor(base_year = base_year,
pm = pm_concentration, lag_structure = lag_structure,
RR = RR, unit = unit)
IF
impact_factor <- function(pm_conc,
lag_structure = cumsum(c(0.3, rep(0.125, 4), rep(0.2/15, 15))),
RR = 1.062, unit = 10){
# Create a variable that allows us to get all the variables the right length
duration <- 120
pm <- c(pm_conc, rep(pm_conc[length(pm_conc)], duration - length(pm_conc)))
# Calculate the year-to-year change in PM concentration.
change <- c(0, diff(pm))
# Which years have a change in PM concentration?
years <- which(change != 0)
# Make a matrix of the PM2.5 concentration adjusted for the lag effect
x <- matrix(0, duration, duration)
for(i in seq_len(duration)){
x[i, ] <- c(rep(0, i - 1),
head(lag_structure, duration - i), # If we're getting to the end of the row the lag has to be cut.
rep(1, length(pm) - i + 1 - length(head(lag_structure, duration - i)))
)
}
x <- x * -change  # lag x the change in concentration
x <- colSums(x)   # Total effect in each year
# Calculate the impact factor
IF <- 1 / RR^(x/unit)
IF
}
impact_factor(base_year = 2012, pm_conc = pm_concentration, RR = 1.06)
impact_factor(pm_conc = pm_concentration, RR = 1.06)
IF <- impact_factor(pm = pm_concentration, lag_structure = lag_structure,
RR = RR, unit = unit)
pm_concentration = c(20, 19),
pm_concentration = c(20, 19)
IF <- impact_factor(pm = pm_concentration, lag_structure = lag_structure,
RR = RR, unit = unit)
IF
survival_probability <- function(IF) {
# Extend the hazard by repeating hazard in the final age group to length 106
qx <- c(qx, rep(qx[length(qx)], max_age + 1 - length(qx)))
# Mulitply ages 30+ by the impact factor
qx[31:length(qx)] <- qx[31:length(qx)] * IF
# Calculate the surival probability in the IOMLIFET way
sx <- (2 - qx) / (2 + qx)
sx[length(sx)] <- 0
sx
}
survival_diag <- function(IF){
# Calculate the survival probability
sx <- survival_probability(IF)
# Make the diagonal
sx_diag <- diag(head(sx, - 1))
# Make a vector that goes 1, 0, 0 ... and make it the first row
r1 <- rep(c(1,0), c(1, max_age - 1))
sx_diag <- cbind(rbind(r1, sx_diag), rep(0, max_age + 1))
sx_diag
}
population_matrix <- function(IFs) {
# Make a list of Leslie matrices survival probability
sx_diags <- lapply(IFs, survival_diag)
nx <- c(population, rep(0, nrow(sx_diags[[1]]) - length(population)))
pop_mat <- matrix(0, ncol = length(sx_diags) + 1, nrow = nrow(sx_diags[[1]]))
pop_mat[, 1] <- nx
for(i in seq_along(sx_diags)){
pop_mat[, i + 1] <- sx_diags[[i]] %*% pop_mat[, i]
}
pop_mat <- pop_mat[, -ncol(pop_mat)]
colnames(pop_mat) <- base_year:(end_year -1)
rownames(pop_mat) <- 0:max_age
pop_mat
}
qx <- deaths/population
sx_mat <- sapply(rep(1, nrow(IF)), FUN = survival_probability)
sx_mat <- sapply(rep(1, length(IF)), FUN = survival_probability)
sx_mat_i <- sapply(IF, FUN = survival_probability)
baseline_pop <- population_matrix(rep(1, length(IF)))
population_matrix <- function(IFs) {
# Make a list of Leslie matrices survival probability
sx_diags <- lapply(IFs, survival_diag)
nx <- c(population, rep(0, nrow(sx_diags[[1]]) - length(population)))
pop_mat <- matrix(0, ncol = length(sx_diags) + 1, nrow = nrow(sx_diags[[1]]))
pop_mat[, 1] <- nx
for(i in seq_along(sx_diags)){
pop_mat[, i + 1] <- sx_diags[[i]] %*% pop_mat[, i]
}
pop_mat <- pop_mat[, -ncol(pop_mat)]
colnames(pop_mat) <- base_year:(base_year + 120)
rownames(pop_mat) <- 0:max_age
pop_mat
}
baseline_pop <- population_matrix(rep(1, length(IF)))
sx_diags <- lapply(IFs, survival_diag)
IFs <- IF
sx_diags <- lapply(IFs, survival_diag)
nx <- c(population, rep(0, nrow(sx_diags[[1]]) - length(population)))
pop_mat <- matrix(0, ncol = length(sx_diags) + 1, nrow = nrow(sx_diags[[1]]))
pop_mat[, 1] <- nx
for(i in seq_along(sx_diags)){
pop_mat[, i + 1] <- sx_diags[[i]] %*% pop_mat[, i]
}
pop_mat <- pop_mat[, -ncol(pop_mat)]
colnames(pop_mat) <- base_year:(base_year + 120)
colnames(pop_mat) <- base_year:(base_year + 119)
rownames(pop_mat) <- 0:max_age
pop_mat
population_matrix <- function(IFs) {
# Make a list of Leslie matrices survival probability
sx_diags <- lapply(IFs, survival_diag)
nx <- c(population, rep(0, nrow(sx_diags[[1]]) - length(population)))
pop_mat <- matrix(0, ncol = length(sx_diags) + 1, nrow = nrow(sx_diags[[1]]))
pop_mat[, 1] <- nx
for(i in seq_along(sx_diags)){
pop_mat[, i + 1] <- sx_diags[[i]] %*% pop_mat[, i]
}
pop_mat <- pop_mat[, -ncol(pop_mat)]
colnames(pop_mat) <- base_year:(base_year + 119)
rownames(pop_mat) <- 0:max_age
pop_mat
}
qx <- deaths/population
sx_mat <- sapply(rep(1, length(IF)), FUN = survival_probability)
sx_mat_i <- sapply(IF, FUN = survival_probability)
baseline_pop <- population_matrix(rep(1, length(IF)))
impacted_pop <- population_matrix(IF)
baseline_deaths <- baseline_pop * (1 - sx_mat)
impacted_deaths <- impacted_pop * (1 - sx_mat_i)
diff_deaths <- baseline_deaths - impacted_deaths
plot(colSums(diff_death))
plot(colSums(diff_deaths))
impact  <- function(population, deaths,
pm_concentration = c(20, 19),
lag_structure = cumsum(c(0.3, rep(0.125, 4), rep(0.2/15, 15))),
RR = 1.06, unit = 10,
max_age = 105, base_year = 2016){
# First estimate the impact factor
IF <- impact_factor(pm = pm_concentration, lag_structure = lag_structure,
RR = RR, unit = unit)
# Functions -----------------------------------------
# Calculate the survival propbability from age 0 - 105.
survival_probability <- function(IF) {
# Extend the hazard by repeating hazard in the final age group to length 106
qx <- c(qx, rep(qx[length(qx)], max_age + 1 - length(qx)))
# Mulitply ages 30+ by the impact factor
qx[31:length(qx)] <- qx[31:length(qx)] * IF
# Calculate the surival probability in the IOMLIFET way
sx <- (2 - qx) / (2 + qx)
sx[length(sx)] <- 0
sx
}
# Make a Leslie matrix to transform the current population
survival_diag <- function(IF){
# Calculate the survival probability
sx <- survival_probability(IF)
# Make the diagonal
sx_diag <- diag(head(sx, - 1))
# Make a vector that goes 1, 0, 0 ... and make it the first row
r1 <- rep(c(1,0), c(1, max_age - 1))
sx_diag <- cbind(rbind(r1, sx_diag), rep(0, max_age + 1))
sx_diag
}
# Make a matrix of future population by age and calendar year
population_matrix <- function(IFs) {
# Make a list of Leslie matrices survival probability
sx_diags <- lapply(IFs, survival_diag)
nx <- c(population, rep(0, nrow(sx_diags[[1]]) - length(population)))
pop_mat <- matrix(0, ncol = length(sx_diags) + 1, nrow = nrow(sx_diags[[1]]))
pop_mat[, 1] <- nx
for(i in seq_along(sx_diags)){
pop_mat[, i + 1] <- sx_diags[[i]] %*% pop_mat[, i]
}
pop_mat <- pop_mat[, -ncol(pop_mat)]
colnames(pop_mat) <- base_year:(base_year + 119)
rownames(pop_mat) <- 0:max_age
pop_mat
}
# Calculate results --------------------------------------------------
# Make matrices of the surival probability of the baseline and impacted
# populations
qx <- deaths/population
sx_mat <- sapply(rep(1, length(IF)), FUN = survival_probability)
sx_mat_i <- sapply(IF, FUN = survival_probability)
# Make matricies of the baseline and impacted populations
baseline_pop <- population_matrix(rep(1, length(IF)))
impacted_pop <- population_matrix(IF)
# Calculate number of deaths
baseline_deaths <- baseline_pop * (1 - sx_mat)
impacted_deaths <- impacted_pop * (1 - sx_mat_i)
diff_deaths <- baseline_deaths - impacted_deaths
# Calculate number of deaths among current cohort
diff_deaths_current <- diff_deaths
diff_deaths_current[upper.tri(diff_deaths_current)] <- 0
# Calculate number of life years
baseline_ly <- baseline_pop - 0.5 * baseline_deaths
impacted_ly <- impacted_pop - 0.5 * impacted_deaths
diff_ly <- impacted_ly - baseline_ly
diff_ly_current <- diff_ly
diff_ly_current[upper.tri(diff_ly_current)] <- 0
results <- list("Total difference in deaths per year" = colSums(diff_deaths),
"Total difference in deaths per year (current cohort)" = colSums(diff_deaths_current),
"Total difference in life years (by year)" = colSums(diff_ly),
"Difference in deaths (matrix)" = diff_deaths,
"Difference in deaths among current cohort (matrix)" = diff_deaths_current,
"Difference in life years (matrix)" = diff_ly)
}
x <- impact(max_age = 106, deaths = deaths, population = population)
plot(x[[1]])
plot(x[[2]])
x[[1]]
plot(x[[1]])
impact  <- function(population, deaths,
pm_concentration = c(20, 19),
lag_structure = cumsum(c(0.3, rep(0.125, 4), rep(0.2/15, 15))),
RR = 1.06, unit = 10,
max_age = 105, base_year = 2013){
# First estimate the impact factor
IF <- impact_factor(pm = pm_concentration, lag_structure = lag_structure,
RR = RR, unit = unit)
# Functions -----------------------------------------
# Calculate the survival propbability from age 0 - 105.
survival_probability <- function(IF) {
# Extend the hazard by repeating hazard in the final age group to length 106
qx <- c(qx, rep(qx[length(qx)], max_age + 1 - length(qx)))
# Mulitply ages 30+ by the impact factor
qx[31:length(qx)] <- qx[31:length(qx)] * IF
# Calculate the surival probability in the IOMLIFET way
sx <- (2 - qx) / (2 + qx)
sx[length(sx)] <- 0
sx
}
# Make a Leslie matrix to transform the current population
survival_diag <- function(IF){
# Calculate the survival probability
sx <- survival_probability(IF)
# Make the diagonal
sx_diag <- diag(head(sx, - 1))
# Make a vector that goes 1, 0, 0 ... and make it the first row
r1 <- rep(c(1,0), c(1, max_age - 1))
sx_diag <- cbind(rbind(r1, sx_diag), rep(0, max_age + 1))
sx_diag
}
# Make a matrix of future population by age and calendar year
population_matrix <- function(IFs) {
# Make a list of Leslie matrices
sx_diags <- lapply(IFs, survival_diag)
# Empty matrix to which the transformed popualtion data will be added
pop_mat <- matrix(0, ncol = length(sx_diags) + 1, nrow = nrow(sx_diags[[1]]))
# Baseline populaiton (0 in age-groups older than we have data for)
nx <- c(population, rep(0, nrow(sx_diags[[1]]) - length(population)))
pop_mat[, 1] <- nx
for(i in seq_along(sx_diags)){
pop_mat[, i + 1] <- sx_diags[[i]] %*% pop_mat[, i]
}
pop_mat <- pop_mat[, -ncol(pop_mat)]
colnames(pop_mat) <- base_year:(base_year + 119)
rownames(pop_mat) <- 0:max_age
pop_mat
}
# Calculate results --------------------------------------------------
# Make matrices of the surival probability of the baseline and impacted
# populations
qx <- deaths/population
sx_mat <- sapply(rep(1, length(IF)), FUN = survival_probability)
sx_mat_i <- sapply(IF, FUN = survival_probability)
# Make matricies of the baseline and impacted populations
baseline_pop <- population_matrix(rep(1, length(IF)))
impacted_pop <- population_matrix(IF)
# Calculate number of deaths
baseline_deaths <- baseline_pop * (1 - sx_mat)
impacted_deaths <- impacted_pop * (1 - sx_mat_i)
diff_deaths <- baseline_deaths - impacted_deaths
# Calculate number of deaths among current cohort
diff_deaths_current <- diff_deaths
diff_deaths_current[upper.tri(diff_deaths_current)] <- 0
# Calculate number of life years (population x half the number of deaths in a
# given year)
baseline_ly <- baseline_pop - 0.5 * baseline_deaths
impacted_ly <- impacted_pop - 0.5 * impacted_deaths
diff_ly <- impacted_ly - baseline_ly
# And life years among the current cohort
diff_ly_current <- diff_ly
diff_ly_current[upper.tri(diff_ly_current)] <- 0
results <- list("Total difference in deaths per year" = colSums(diff_deaths),
"Total difference in deaths per year (current cohort)" = colSums(diff_deaths_current),
"Total difference in life years (by year)" = colSums(diff_ly),
"Difference in deaths (matrix)" = diff_deaths,
"Difference in deaths among current cohort (matrix)" = diff_deaths_current,
"Difference in life years (matrix)" = diff_ly)
}
x <- impact(population, deaths)
x
x[[1]]
impact  <- function(population, deaths,
pm_concentration = c(20, 19),
lag_structure = cumsum(c(0.3, rep(0.125, 4), rep(0.2/15, 15))),
RR = 1.06, unit = 10,
max_age = 105, base_year = 2013){
# First estimate the impact factor
IF <- impact_factor(pm = pm_concentration, lag_structure = lag_structure,
RR = RR, unit = unit)
# Functions -----------------------------------------
# Calculate the survival propbability from age 0 - 105.
survival_probability <- function(IF) {
# Extend the hazard by repeating hazard in the final age group to length 106
qx <- c(qx, rep(qx[length(qx)], max_age + 1 - length(qx)))
# Mulitply ages 30+ by the impact factor
qx[31:length(qx)] <- qx[31:length(qx)] * IF
# Calculate the surival probability in the IOMLIFET way
sx <- (2 - qx) / (2 + qx)
sx[length(sx)] <- 0
sx
}
# Make a Leslie matrix to transform the current population
survival_diag <- function(IF){
# Calculate the survival probability
sx <- survival_probability(IF)
# Make the diagonal
sx_diag <- diag(head(sx, - 1))
# Make a vector that goes 1, 0, 0 ... and make it the first row
r1 <- rep(c(1,0), c(1, max_age - 1))
sx_diag <- cbind(rbind(r1, sx_diag), rep(0, max_age + 1))
sx_diag
}
# Make a matrix of future population by age and calendar year
population_matrix <- function(IFs) {
# Make a list of Leslie matrices
sx_diags <- lapply(IFs, survival_diag)
# Empty matrix to which the transformed popualtion data will be added
pop_mat <- matrix(0, ncol = length(sx_diags) + 1, nrow = nrow(sx_diags[[1]]))
# Baseline populaiton (0 in age-groups older than we have data for)
nx <- c(population, rep(0, nrow(sx_diags[[1]]) - length(population)))
pop_mat[, 1] <- nx
for(i in seq_along(sx_diags)){
pop_mat[, i + 1] <- sx_diags[[i]] %*% pop_mat[, i]
}
pop_mat <- pop_mat[, -ncol(pop_mat)]
colnames(pop_mat) <- base_year:(base_year + 119)
rownames(pop_mat) <- 0:max_age
pop_mat
}
# Calculate results --------------------------------------------------
# Make matrices of the surival probability of the baseline and impacted
# populations
qx <- deaths/population
sx_mat <- sapply(rep(1, length(IF)), FUN = survival_probability)
sx_mat_i <- sapply(IF, FUN = survival_probability)
# Make matricies of the baseline and impacted populations
baseline_pop <- population_matrix(rep(1, length(IF)))
impacted_pop <- population_matrix(IF)
# Calculate number of deaths
baseline_deaths <- baseline_pop * (1 - sx_mat)
impacted_deaths <- impacted_pop * (1 - sx_mat_i)
diff_deaths <- baseline_deaths - impacted_deaths
# Calculate number of deaths among current cohort
diff_deaths_current <- diff_deaths
diff_deaths_current[upper.tri(diff_deaths_current)] <- 0
# Calculate number of life years (population x half the number of deaths in a
# given year)
baseline_ly <- baseline_pop - 0.5 * baseline_deaths
impacted_ly <- impacted_pop - 0.5 * impacted_deaths
diff_ly <- impacted_ly - baseline_ly
# And life years among the current cohort
diff_ly_current <- diff_ly
diff_ly_current[upper.tri(diff_ly_current)] <- 0
results <- list("Difference in deaths" = diff_deaths,
"Difference in deaths among current cohort" = diff_deaths_current,
"Difference in life years" = diff_ly,
"Difference in life years among current cohort" = diff_ly_current)
}
x <- impact(population, deaths)
plot(colSums(x[[1]]))
plot(colSums(x[[2]]))
plot(colSums(x[[3]]))
plot(colSums(x[[4]]))
system.time(x <- impact(population, deaths))
options(digits = 7)
system.time(x <- impact(population, deaths))
library(iomlifet)
impact_factor <- function(pm_conc,
lag_structure = cumsum(c(0.3, rep(0.125, 4), rep(0.2/15, 15))),
RR = 1.062, unit = 10){
# Create a variable that allows us to get all the variables the right length
duration <- 120
pm <- c(pm_conc, rep(pm_conc[length(pm_conc)], duration - length(pm_conc)))
# Calculate the year-to-year change in PM concentration.
change <- c(0, diff(pm))
# Which years have a change in PM concentration?
years <- which(change != 0)
# Make a matrix of the PM2.5 concentration adjusted for the lag effect
x <- matrix(0, duration, duration)
for(i in seq_len(duration)){
x[i, ] <- c(rep(0, i - 1),
head(lag_structure, duration - i), # If we're getting to the end of the row the lag has to be cut.
rep(1, length(pm) - i + 1 - length(head(lag_structure, duration - i)))
)
}
x <- x * -change  # lag x the change in concentration
x <- colSums(x)   # Total effect in each year
# Calculate the impact factor
IF <- 1 / RR^(x/unit)
IF
}
library(iomlifetR)
